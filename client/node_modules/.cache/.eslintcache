[{"/Users/Elmir/Dev/full-stack/Blog-website/client/src/index.js":"1","/Users/Elmir/Dev/full-stack/Blog-website/client/src/store.js":"2","/Users/Elmir/Dev/full-stack/Blog-website/client/src/App.js":"3","/Users/Elmir/Dev/full-stack/Blog-website/client/src/reducers/rootReducer.js":"4","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/AddPostForm.jsx":"5","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/PostsList.jsx":"6","/Users/Elmir/Dev/full-stack/Blog-website/client/src/reducers/post.js":"7","/Users/Elmir/Dev/full-stack/Blog-website/client/src/actions/types.js":"8","/Users/Elmir/Dev/full-stack/Blog-website/client/src/actions/post.js":"9","/Users/Elmir/Dev/full-stack/Blog-website/client/src/api/index.js":"10","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/Post.jsx":"11"},{"size":333,"mtime":1619093084331,"results":"12","hashOfConfig":"13"},{"size":342,"mtime":1618836249403,"results":"14","hashOfConfig":"13"},{"size":2245,"mtime":1619111167412,"results":"15","hashOfConfig":"13"},{"size":169,"mtime":1618835557821,"results":"16","hashOfConfig":"13"},{"size":3181,"mtime":1619110292101,"results":"17","hashOfConfig":"13"},{"size":785,"mtime":1619112992417,"results":"18","hashOfConfig":"13"},{"size":475,"mtime":1619109906598,"results":"19","hashOfConfig":"13"},{"size":84,"mtime":1619108947844,"results":"20","hashOfConfig":"13"},{"size":523,"mtime":1619111036026,"results":"21","hashOfConfig":"13"},{"size":227,"mtime":1619109247931,"results":"22","hashOfConfig":"13"},{"size":2241,"mtime":1619113330190,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"i48am4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Elmir/Dev/full-stack/Blog-website/client/src/index.js",[],["48","49"],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/store.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/App.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/reducers/rootReducer.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/AddPostForm.jsx",["50","51","52"],"import React, {useState, useRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport * as yup from \"yup\";\nimport {Form, Button, Modal} from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { useForm } from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport * as Yup from 'yup';\nimport { createPost} from '../actions/post';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginBottom: theme.spacing(2)\n  },\n  titles : {\n      fontFamily: 'Popins',\n      fontSize: '1.1rem',\n  }\n}));\n\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\n\nconst postSchema = Yup.object().shape({\n  title: Yup.string().required(),\n  subtitle: Yup.string().required(),\n  content: Yup.string().min(20).required(),\n  tags: Yup.mixed().oneOf(tags),\n});\n\nconst AddPostForm = ({open, handleClose}) => {\n    const dispatch = useDispatch();\n\n    const ref = useRef();\n\n    const [file, setFile] = useState(null);\n\n    const { register, handleSubmit, errors, reset } = useForm({\n        resolver: yupResolver(postSchema)\n    });\n\n    const submitForm = (data) => {\n        dispatch(createPost({...data, image: file}));\n\n        clearForm();\n    }\n    //{...register('password')}\n    const clearForm = () => {\n        reset();\n        setFile(null);\n        handleClose()\n    }\n\n\n    const classes = useStyles();\n    return (\n    <Modal size=\"lg\" show={open} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>Add Post</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={handleSubmit(submitForm)}>\n                <Form.Group className={classes.textField}>\n                    <Form.Label className={classes.titles}>Title</Form.Label>\n                    <Form.Control id=\"title\" type=\"text\" {...register('title')}/>\n                </Form.Group>\n                <Form.Group className={classes.textField}>\n                    <Form.Label className={classes.titles}>Subtitle</Form.Label>\n                    <Form.Control id=\"subtitle\" type=\"text\" {...register('subtitle')}/>\n                </Form.Group >\n                <Form.Group>\n                    <Form.Label>Tags</Form.Label>\n                    <Form.Control {...register('tags')} id=\"tags\" as=\"select\">\n                        {tags.map((tag, index) => (\n                            <option key={index}>{tag}</option>\n                        ))}\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Content</Form.Label>\n                    <Form.Control {...register('content')} id=\"content\" as=\"textarea\" rows={4} />\n                </Form.Group>\n                <FileBase64 multiple={false} onDone={({base64}) => setFile(base64)} />\n                <Button variant=\"secondary\" onClick={clearForm}>Cancel</Button>\n                <Button type=\"submit\" variant=\"primary\" onClick={() => handleSubmit(submitForm) ()}>Publish</Button>\n\n            </Form>\n        </Modal.Body>\n    </Modal>\n    )\n}\n\nexport default AddPostForm\n\n//\n","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/PostsList.jsx",["53","54"],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/reducers/post.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/actions/types.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/actions/post.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/api/index.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/Post.jsx",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":4,"column":13,"nodeType":"61","messageId":"62","endLine":4,"endColumn":16},{"ruleId":"59","severity":1,"message":"63","line":38,"column":11,"nodeType":"61","messageId":"62","endLine":38,"endColumn":14},{"ruleId":"59","severity":1,"message":"64","line":42,"column":37,"nodeType":"61","messageId":"62","endLine":42,"endColumn":43},{"ruleId":"59","severity":1,"message":"65","line":2,"column":15,"nodeType":"61","messageId":"62","endLine":2,"endColumn":21},{"ruleId":"59","severity":1,"message":"66","line":14,"column":11,"nodeType":"61","messageId":"62","endLine":14,"endColumn":18},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'yup' is defined but never used.","Identifier","unusedVar","'ref' is assigned a value but never used.","'errors' is assigned a value but never used.","'Button' is defined but never used.","'classes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]