[{"/Users/Elmir/Dev/full-stack/Blog-website/client/src/index.js":"1","/Users/Elmir/Dev/full-stack/Blog-website/client/src/store.js":"2","/Users/Elmir/Dev/full-stack/Blog-website/client/src/App.js":"3","/Users/Elmir/Dev/full-stack/Blog-website/client/src/reducers/rootReducer.js":"4","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/AddPostForm.jsx":"5","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/PostsList.jsx":"6","/Users/Elmir/Dev/full-stack/Blog-website/client/src/reducers/post.js":"7","/Users/Elmir/Dev/full-stack/Blog-website/client/src/actions/types.js":"8","/Users/Elmir/Dev/full-stack/Blog-website/client/src/actions/post.js":"9","/Users/Elmir/Dev/full-stack/Blog-website/client/src/api/index.js":"10","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/Post.jsx":"11","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/PostDetails.jsx":"12"},{"size":333,"mtime":1619093084331,"results":"13","hashOfConfig":"14"},{"size":342,"mtime":1618836249403,"results":"15","hashOfConfig":"14"},{"size":2450,"mtime":1619198296085,"results":"16","hashOfConfig":"14"},{"size":169,"mtime":1618835557821,"results":"17","hashOfConfig":"14"},{"size":3181,"mtime":1619196417282,"results":"18","hashOfConfig":"14"},{"size":1638,"mtime":1619197962300,"results":"19","hashOfConfig":"14"},{"size":611,"mtime":1619199918365,"results":"20","hashOfConfig":"14"},{"size":138,"mtime":1619199246651,"results":"21","hashOfConfig":"14"},{"size":796,"mtime":1619199946165,"results":"22","hashOfConfig":"14"},{"size":317,"mtime":1619199537585,"results":"23","hashOfConfig":"14"},{"size":2241,"mtime":1619113330190,"results":"24","hashOfConfig":"14"},{"size":2872,"mtime":1619202471207,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"i48am4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Elmir/Dev/full-stack/Blog-website/client/src/index.js",[],["52","53"],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/store.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/App.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/reducers/rootReducer.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/AddPostForm.jsx",["54","55","56"],"import React, {useState, useRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport * as yup from \"yup\";\nimport {Form, Button, Modal} from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { useForm } from \"react-hook-form\";\nimport {yupResolver} from \"@hookform/resolvers/yup\";\nimport * as Yup from 'yup';\nimport { createPost} from '../actions/post';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginBottom: theme.spacing(2)\n  },\n  titles : {\n      fontFamily: 'Popins',\n      fontSize: '1.1rem',\n  }\n}));\n\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\n\nconst postSchema = Yup.object().shape({\n  title: Yup.string().required(),\n  subtitle: Yup.string().required(),\n  content: Yup.string().min(20).required(),\n  tags: Yup.mixed().oneOf(tags),\n});\n\nconst AddPostForm = ({open, handleClose}) => {\n    const dispatch = useDispatch();\n\n    const ref = useRef();\n\n    const [file, setFile] = useState(null);\n\n    const { register, handleSubmit, errors, reset } = useForm({\n        resolver: yupResolver(postSchema)\n    });\n\n    const submitForm = (data) => {\n        dispatch(createPost({...data, image: file}));\n\n        clearForm();\n    }\n    //{...register('password')}\n    const clearForm = () => {\n        reset();\n        setFile(null);\n        handleClose()\n    }\n\n\n    const classes = useStyles();\n    return (\n    <Modal size=\"lg\" show={open} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>Add Post</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <Form onSubmit={handleSubmit(submitForm)}>\n                <Form.Group className={classes.textField}>\n                    <Form.Label className={classes.titles}>Title</Form.Label>\n                    <Form.Control id=\"title\" type=\"text\" {...register('title')}/>\n                </Form.Group>\n                <Form.Group className={classes.textField}>\n                    <Form.Label className={classes.titles}>Subtitle</Form.Label>\n                    <Form.Control id=\"subtitle\" type=\"text\" {...register('subtitle')}/>\n                </Form.Group >\n                <Form.Group>\n                    <Form.Label>Tags</Form.Label>\n                    <Form.Control {...register('tags')} id=\"tags\" as=\"select\">\n                        {tags.map((tag, index) => (\n                            <option key={index}>{tag}</option>\n                        ))}\n                    </Form.Control>\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Content</Form.Label>\n                    <Form.Control {...register('content')} id=\"content\" as=\"textarea\" rows={4} />\n                </Form.Group>\n                <FileBase64 multiple={false} onDone={({base64}) => setFile(base64)} />\n                <Button variant=\"secondary\" onClick={clearForm}>Cancel</Button>\n                <Button type=\"submit\" variant=\"primary\" onClick={() => handleSubmit(submitForm) ()}>Publish</Button>\n\n            </Form>\n        </Modal.Body>\n    </Modal>\n    )\n}\n\nexport default AddPostForm\n\n//\n","/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/PostsList.jsx",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/reducers/post.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/actions/types.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/actions/post.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/api/index.js",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/Post.jsx",[],"/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/PostDetails.jsx",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":4,"column":13,"nodeType":"64","messageId":"65","endLine":4,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":38,"column":11,"nodeType":"64","messageId":"65","endLine":38,"endColumn":14},{"ruleId":"62","severity":1,"message":"67","line":42,"column":37,"nodeType":"64","messageId":"65","endLine":42,"endColumn":43},{"ruleId":"68","severity":1,"message":"69","line":50,"column":8,"nodeType":"70","endLine":50,"endColumn":18,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'yup' is defined but never used.","Identifier","unusedVar","'ref' is assigned a value but never used.","'errors' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [dispatch, id]",{"range":"77","text":"78"},[1371,1381],"[dispatch, id]"]