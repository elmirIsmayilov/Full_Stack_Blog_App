{"ast":null,"code":"var _jsxFileName = \"/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/AddPostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as yup from \"yup\";\nimport { Form, Button, Modal } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2)\n  },\n  textField: {\n    marginBottom: theme.spacing(2)\n  },\n  titles: {\n    fontFamily: 'Popins',\n    fontSize: '1.1rem'\n  }\n}));\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags)\n});\n\nconst AddPostForm = ({\n  open,\n  handleClose\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const ref = useRef();\n  const [file, setFile] = useState(null);\n  const {\n    register,\n    handleSubmit\n  } = useForm();\n\n  const onSubmit = data => {\n    console.log(data); //dispatch(createPost())\n  };\n\n  const clearForm = () => {\n    setFile(null);\n    handleClose();\n  };\n\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    size: \"lg\",\n    show: open,\n    onHide: handleClose,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      closeButton: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n        children: \"Add Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"email\",\n          name: \"email\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"password\",\n          ref: register\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPostForm, \"Qd1K5lx3/Tqp2RUaXi0vpDzEpBM=\", false, function () {\n  return [useDispatch, useForm, useStyles];\n});\n\n_c = AddPostForm;\nexport default AddPostForm; //\n// <Form>\n// <Form.Group className={classes.textField}>\n//     <Form.Label className={classes.titles}>Title</Form.Label>\n// <Form.Control type=\"text\"/>\n// </Form.Group>\n// <Form.Group className={classes.textField}>\n// <Form.Label className={classes.titles}>Subtitle</Form.Label>\n// <Form.Control type=\"text\"/>\n// </Form.Group >\n// <Form.Group>\n// <Form.Label>Tags</Form.Label>\n// <Form.Control as=\"select\">\n// {tags.map((tag, index) => (\n// <option key={index}>{tag}</option>\n// ))}\n// </Form.Control>\n// </Form.Group>\n// <Form.Group>\n// <Form.Label>Content</Form.Label>\n// <Form.Control as=\"textarea\" rows={4} />\n// </Form.Group>\n// <FileBase64 multiple={false} onDone={({base64}) => setFile(base64)} />\n// <Button variant=\"secondary\" onClick={clearForm}>Cancel</Button>\n// <Button type=\"submit\" variant=\"primary\">Publish</Button>\n//\n// </Form>\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/AddPostForm.jsx"],"names":["React","useState","useRef","useDispatch","makeStyles","yup","Form","Button","Modal","FileBase64","useForm","useStyles","theme","paper","padding","spacing","textField","marginBottom","titles","fontFamily","fontSize","tags","postSchema","object","shape","title","string","required","subtitle","content","min","tag","mixed","oneOf","AddPostForm","open","handleClose","dispatch","ref","file","setFile","register","handleSubmit","onSubmit","data","console","log","clearForm","classes"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport * as yup from \"yup\";\nimport {Form, Button, Modal} from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { useForm } from \"react-hook-form\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginBottom: theme.spacing(2)\n  },\n  titles : {\n      fontFamily: 'Popins',\n      fontSize: '1.1rem',\n  }\n}));\n\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\n\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags),\n});\n\nconst AddPostForm = ({open, handleClose}) => {\n    const dispatch = useDispatch();\n\n    const ref = useRef();\n\n    const [file, setFile] = useState(null);\n\n    const { register, handleSubmit } = useForm();\n\n    const onSubmit = (data) => {\n        console.log(data);\n        //dispatch(createPost())\n    }\n\n    const clearForm = () => {\n        setFile(null);\n        handleClose()\n    }\n\n\n    const classes = useStyles();\n    return (\n    <Modal size=\"lg\" show={open} onHide={handleClose}>\n        <Modal.Header closeButton>\n            <Modal.Title>Add Post</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n            <form onSubmit={handleSubmit(onSubmit)}>\n                <input type=\"text\" placeholder=\"email\" name=\"email\" ref={register}/>\n                <input type=\"password\" placeholder=\"password\" ref={register}/>\n                <input type=\"submit\"/>\n            </form>\n        </Modal.Body>\n    </Modal>\n    )\n}\n\nexport default AddPostForm\n\n//\n// <Form>\n// <Form.Group className={classes.textField}>\n//     <Form.Label className={classes.titles}>Title</Form.Label>\n// <Form.Control type=\"text\"/>\n// </Form.Group>\n// <Form.Group className={classes.textField}>\n// <Form.Label className={classes.titles}>Subtitle</Form.Label>\n// <Form.Control type=\"text\"/>\n// </Form.Group >\n// <Form.Group>\n// <Form.Label>Tags</Form.Label>\n// <Form.Control as=\"select\">\n// {tags.map((tag, index) => (\n// <option key={index}>{tag}</option>\n// ))}\n// </Form.Control>\n// </Form.Group>\n// <Form.Group>\n// <Form.Label>Content</Form.Label>\n// <Form.Control as=\"textarea\" rows={4} />\n// </Form.Group>\n// <FileBase64 multiple={false} onDone={({base64}) => setFile(base64)} />\n// <Button variant=\"secondary\" onClick={clearForm}>Cancel</Button>\n// <Button type=\"submit\" variant=\"primary\">Publish</Button>\n//\n// </Form>"]},"metadata":{},"sourceType":"module"}