{"ast":null,"code":"var _jsxFileName = \"/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/AddPostForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport * as yup from \"yup\";\nimport { Form, Button } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(2)\n  },\n  textField: {\n    marginBottom: theme.spacing(2)\n  },\n  titles: {\n    fontFamily: 'Popins',\n    fontSize: '1.1rem'\n  }\n}));\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags)\n});\n\nconst AddPostForm = ({\n  open,\n  handleClose\n}) => {\n  _s();\n\n  const [file, setFile] = useState(null);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: classes.textField,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: classes.titles,\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: classes.textField,\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        className: classes.titles,\n        children: \"Subtitle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Tags\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"select\",\n        children: tags.map((tag, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          children: tag\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        as: \"textarea\",\n        rows: 4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FileBase64, {\n      multiple: false,\n      onDone: ({\n        base64\n      }) => setFile(base64)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPostForm, \"pEVdJJqOgcFB06Y/TUZEhrHlIa4=\", false, function () {\n  return [useStyles];\n});\n\n_c = AddPostForm;\nexport default AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["/Users/Elmir/Dev/full-stack/Blog-website/client/src/components/AddPostForm.jsx"],"names":["React","useState","makeStyles","yup","Form","Button","FileBase64","useStyles","theme","paper","padding","spacing","textField","marginBottom","titles","fontFamily","fontSize","tags","postSchema","object","shape","title","string","required","subtitle","content","min","tag","mixed","oneOf","AddPostForm","open","handleClose","file","setFile","classes","map","index","base64"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\"\nimport * as yup from \"yup\";\nimport { Form, Button } from 'react-bootstrap';\nimport FileBase64 from 'react-file-base64';\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    padding: theme.spacing(2),\n  },\n  textField: {\n    marginBottom: theme.spacing(2)\n  },\n  titles : {\n      fontFamily: 'Popins',\n      fontSize: '1.1rem',\n  }\n}));\n\nconst tags = [\"fun\", \"programming\", \"health\", \"science\"];\n\nconst postSchema = yup.object().shape({\n  title: yup.string().required(),\n  subtitle: yup.string().required(),\n  content: yup.string().min(20).required(),\n  tag: yup.mixed().oneOf(tags),\n});\n\nconst AddPostForm = ({open, handleClose}) => {\n    const [file, setFile] = useState(null);\n\n    const classes = useStyles();\n    return (\n        <Form>\n            <Form.Group className={classes.textField}>\n                <Form.Label className={classes.titles}>Title</Form.Label>\n                <Form.Control type=\"text\"/>\n            </Form.Group>\n            <Form.Group className={classes.textField}>\n                <Form.Label className={classes.titles}>Subtitle</Form.Label>\n                <Form.Control type=\"text\"/>\n            </Form.Group >\n            <Form.Group>\n                <Form.Label>Tags</Form.Label>\n                <Form.Control as=\"select\">\n                    {tags.map((tag, index) => (\n                        <option key={index}>{tag}</option>\n                    ))}\n                </Form.Control>\n            </Form.Group>\n            <Form.Group>\n                <Form.Label>Content</Form.Label>\n                <Form.Control as=\"textarea\" rows={4} />\n            </Form.Group>\n            <FileBase64 multiple={false} onDone={({base64}) => setFile(base64)} />\n        </Form>\n    )\n}\n\nexport default AddPostForm\n"]},"metadata":{},"sourceType":"module"}