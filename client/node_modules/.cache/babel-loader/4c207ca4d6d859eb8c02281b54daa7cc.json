{"ast":null,"code":"var _jsxFileName = \"/Users/Elmir/Dev/full-stack/Blog-website/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport { CssBaseline, Container, Grid, AppBar, Toolbar, Typography, Button, IconButton } from \"@material-ui/core\";\nimport PenIcon from \"@material-ui/icons/Create\";\nimport PostsList from \"./components/PostsList\";\nimport AddPostForm from \"./components/AddPostForm\";\nimport { fetchPost } from \"./actions/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  menuButton: {\n    marginRight: theme.spacing(2)\n  },\n  title: {\n    flexGrow: 1\n  },\n  container: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nconst App = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(fetchPost());\n  }, [dispatch]);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: [/*#__PURE__*/_jsxDEV(AppBar, {\n        position: \"static\",\n        color: \"inherit\",\n        elevation: 0,\n        children: /*#__PURE__*/_jsxDEV(Toolbar, {\n          children: [/*#__PURE__*/_jsxDEV(IconButton, {\n            edge: \"store\",\n            className: classes.container,\n            color: \"inherit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h6\",\n            color: \"secondary\",\n            className: classes.title,\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"http://localhost:3000/posts\",\n              children: \"Blog Website\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            variant: \"outlined\",\n            onClick: handleOpen,\n            startIcon: /*#__PURE__*/_jsxDEV(PenIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 88\n            }, this),\n            children: \"Yeni Yazi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.container,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Router, {\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/posts\",\n                component: PostsList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Redirect, {\n              from: \"/\",\n              to: \"/posts\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddPostForm, {\n      open: open,\n      handleClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"Bimf0oSka0J2Kx8sE9MUmZwBxiQ=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/Elmir/Dev/full-stack/Blog-website/client/src/App.js"],"names":["React","useState","useEffect","useDispatch","makeStyles","BrowserRouter","Router","Route","Switch","Redirect","CssBaseline","Container","Grid","AppBar","Toolbar","Typography","Button","IconButton","PenIcon","PostsList","AddPostForm","fetchPost","useStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","container","marginTop","App","dispatch","open","setOpen","handleOpen","handleClose","classes"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useDispatch} from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n} from \"react-router-dom\";\nimport {\n  CssBaseline,\n  Container,\n  Grid,\n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  IconButton,\n} from \"@material-ui/core\";\nimport PenIcon from \"@material-ui/icons/Create\";\nimport PostsList from \"./components/PostsList\";\nimport AddPostForm from \"./components/AddPostForm\";\nimport {fetchPost} from \"./actions/post\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n  container: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  useEffect(() => {\n    dispatch(fetchPost())\n  },[dispatch])\n\n  const classes = useStyles();\n  return (\n    <>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n          <Toolbar>\n            <IconButton\n              edge=\"store\"\n              className={classes.container}\n              color=\"inherit\"\n            />\n            <Typography\n              variant=\"h6\"\n              color=\"secondary\"\n              className={classes.title}\n            >\n              <a href=\"http://localhost:3000/posts\">Blog Website</a>\n            </Typography>\n            <Button color=\"primary\" variant=\"outlined\" onClick={handleOpen} startIcon={<PenIcon />}>\n              Yeni Yazi\n            </Button>\n          </Toolbar>\n        </AppBar>\n        <Grid container className={classes.container}>\n          <Grid item xs={12}>\n            <Router>\n              <Switch>\n                <Route path=\"/posts\" component={PostsList} />\n              </Switch>\n              <Redirect from=\"/\" to=\"/posts\" />\n            </Router>\n          </Grid>\n        </Grid>\n      </Container>\n\n      <AddPostForm open={open} handleClose={handleClose} />\n\n\n    </>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}